#define CPU s1c88
#include "instruction.h"

// TODO: fixed bits

// TODO: argument flags

// the instructions :)
const Instruction instructions[] =
{
//// 8-bit instructions
// Addition
{"ADD A,A", 0x01, 0x00, 1, 0},
{"ADD A,B", 0x01, 0x01, 1, 0},
{"ADD A,~0", 0x01, 0x02, 2, 1, 8, 0x020048},
{"ADD A,[HL]", 0x01, 0x03, 1, 0},
{"ADD A,[BR:~0]", 0x01, 0x04, 2, 1, 8, 0x040048},
{"ADD A,[~0]", 0x01, 0x05, 3, 1, 8, 0x040050},
{"ADD A,[IX]", 0x01, 0x06, 1, 0},
{"ADD A,[IY]", 0x01, 0x07, 1, 0},
{"ADD A,[IX+~0]", 0x04, 0x00CE, 3, 1, 16, 0x040048},
{"ADD A,[IY+~0]", 0x04, 0x01CE, 3, 1, 16, 0x040048},
{"ADD A,[IX+L]", 0x04, 0x02CE, 2, 0},
{"ADD A,[IY+L]", 0x04, 0x03CE, 2, 0},
{"ADD [HL],A", 0x04, 0x04CE, 2, 0},
{"ADD [HL],~0", 0x04, 0x05CE, 3, 1, 16, 0x020048},
{"ADD [HL],[IX]", 0x04, 0x06CE, 2, 0},
{"ADD [HL],[IY]", 0x04, 0x07CE, 2, 0},

{"ADC A,A", 0x01, 0x08, 1, 0},
{"ADC A,B", 0x01, 0x09, 1, 0},
{"ADC A,~0", 0x01, 0x0A, 2, 1, 8, 0x020048},
{"ADC A,[HL]", 0x01, 0x0B, 1, 0},
{"ADC A,[BR:~0]", 0x01, 0x0C, 2, 1, 8, 0x040048},
{"ADC A,[~0]", 0x01, 0x0D, 3, 1, 8, 0x040050},
{"ADC A,[IX]", 0x01, 0x0E, 1, 0},
{"ADC A,[IY]", 0x01, 0x0F, 1, 0},
{"ADC A,[IX+~0]", 0x04, 0x08CE, 3, 1, 16, 0x040048},
{"ADC A,[IY+~0]", 0x04, 0x09CE, 3, 1, 16, 0x040048},
{"ADC A,[IX+L]", 0x04, 0x0ACE, 2, 0},
{"ADC A,[IY+L]", 0x04, 0x0BCE, 2, 0},
{"ADC [HL],A", 0x04, 0x0CCE, 2, 0},
{"ADC [HL],~0", 0x04, 0x0DCE, 3, 1, 16, 0x020048},
{"ADC [HL],[IX]", 0x04, 0x0ECE, 2, 0},
{"ADC [HL],[IY]", 0x04, 0x0FCE, 2, 0},

// Subtraction
{"SUB A,A", 0x01, 0x10, 1, 0},
{"SUB A,B", 0x01, 0x11, 1, 0},
{"SUB A,~0", 0x01, 0x12, 2, 1, 8, 0x020048},
{"SUB A,[HL]", 0x01, 0x13, 1, 0},
{"SUB A,[BR:~0]", 0x01, 0x14, 2, 1, 8, 0x040048},
{"SUB A,[~0]", 0x01, 0x15, 3, 1, 8, 0x040050},
{"SUB A,[IX]", 0x01, 0x16, 1, 0},
{"SUB A,[IY]", 0x01, 0x17, 1, 0},
{"SUB A,[IX+~0]", 0x04, 0x10CE, 3, 1, 16, 0x040048},
{"SUB A,[IY+~0]", 0x04, 0x11CE, 3, 1, 16, 0x040048},
{"SUB A,[IX+L]", 0x04, 0x12CE, 2, 0},
{"SUB A,[IY+L]", 0x04, 0x13CE, 2, 0},
{"SUB [HL],A", 0x04, 0x14CE, 2, 0},
{"SUB [HL],~0", 0x04, 0x15CE, 3, 1, 16, 0x020048},
{"SUB [HL],[IX]", 0x04, 0x16CE, 2, 0},
{"SUB [HL],[IY]", 0x04, 0x17CE, 2, 0},

{"SBC A,A", 0x01, 0x18, 1, 0},
{"SBC A,B", 0x01, 0x19, 1, 0},
{"SBC A,~0", 0x01, 0x1A, 2, 1, 8, 0x020048},
{"SBC A,[HL]", 0x01, 0x1B, 1, 0},
{"SBC A,[BR:~0]", 0x01, 0x1C, 2, 1, 8, 0x040048},
{"SBC A,[~0]", 0x01, 0x1D, 3, 1, 8, 0x040050},
{"SBC A,[IX]", 0x01, 0x1E, 1, 0},
{"SBC A,[IY]", 0x01, 0x1F, 1, 0},
{"SBC A,[IX+~0]", 0x04, 0x18CE, 3, 1, 16, 0x040048},
{"SBC A,[IY+~0]", 0x04, 0x19CE, 3, 1, 16, 0x040048},
{"SBC A,[IX+L]", 0x04, 0x1ACE, 2, 0},
{"SBC A,[IY+L]", 0x04, 0x1BCE, 2, 0},
{"SBC [HL],A", 0x04, 0x1CCE, 2, 0},
{"SBC [HL],~0", 0x04, 0x1DCE, 3, 1, 16, 0x020048},
{"SBC [HL],[IX]", 0x04, 0x1ECE, 2, 0},
{"SBC [HL],[IY]", 0x04, 0x1FCE, 2, 0},

// Logical product
{"AND A,A", 0x01, 0x20, 1, 0},
{"AND A,B", 0x01, 0x21, 1, 0},
{"AND A,~0", 0x01, 0x22, 2, 1, 8, 0x020048},
{"AND A,[HL]", 0x01, 0x23, 1, 0},
{"AND A,[BR:~0]", 0x01, 0x24, 2, 1, 8, 0x040048},
{"AND A,[~0]", 0x01, 0x25, 3, 1, 8, 0x040050},
{"AND A,[IX]", 0x01, 0x26, 1, 0},
{"AND A,[IY]", 0x01, 0x27, 1, 0},
{"AND A,[IX+~0]", 0x04, 0x20CE, 3, 1, 16, 0x040048},
{"AND A,[IY+~0]", 0x04, 0x21CE, 3, 1, 16, 0x040048},
{"AND A,[IX+L]", 0x04, 0x22CE, 2, 0},
{"AND A,[IY+L]", 0x04, 0x23CE, 2, 0},
{"AND B,~0", 0x04, 0xB0CE, 3, 1, 16, 0x020048},
{"AND H,~0", 0x04, 0xB2CE, 3, 1, 16, 0x020048},
{"AND [BR:~0],~1", 0x01, 0xD8, 3, 2, 8, 0x020048, 16, 0x040048},
{"AND [HL],A", 0x04, 0x24CE, 2, 0},
{"AND [HL],~0", 0x04, 0x25CE, 3, 1, 16, 0x020048},
{"AND [HL],[IX]", 0x04, 0x26CE, 2, 0},
{"AND [HL],[IY]", 0x04, 0x27CE, 2, 0},
{"AND L,~0", 0x04, 0xB1CE, 3, 1, 16, 0x020048},
{"AND SC,~0", 0x01, 0x9C, 2, 1, 8, 0x020048},

// Logical sum
{"OR A,A", 0x01, 0x28, 1, 0},
{"OR A,B", 0x01, 0x29, 1, 0},
{"OR A,~0", 0x01, 0x2A, 2, 1, 8, 0x020048},
{"OR A,[HL]", 0x01, 0x2B, 1, 0},
{"OR A,[BR:~0]", 0x01, 0x2C, 2, 1, 8, 0x040048},
{"OR A,[~0]", 0x01, 0x2D, 3, 1, 8, 0x040050},
{"OR A,[IX]", 0x01, 0x2E, 1, 0},
{"OR A,[IY]", 0x01, 0x2F, 1, 0},
{"OR A,[IX+~0]", 0x04, 0x28CE, 3, 1, 16, 0x040048},
{"OR A,[IY+~0]", 0x04, 0x29CE, 3, 1, 16, 0x040048},
{"OR A,[IX+L]", 0x04, 0x2ACE, 2, 0},
{"OR A,[IY+L]", 0x04, 0x2BCE, 2, 0},
{"OR B,~0", 0x04, 0xB4CE, 3, 1, 16, 0x020048},
{"OR H,~0", 0x04, 0xB6CE, 3, 1, 16, 0x020048},
{"OR [BR:~0],~1", 0x01, 0xD9, 3, 2, 8, 0x020048, 16, 0x040048},
{"OR [HL],A", 0x04, 0x2CCE, 2, 0},
{"OR [HL],~0", 0x04, 0x2DCE, 3, 1, 16, 0x020048},
{"OR [HL],[IX]", 0x04, 0x2ECE, 2, 0},
{"OR [HL],[IY]", 0x04, 0x2FCE, 2, 0},
{"OR L,~0", 0x04, 0xB5CE, 3, 1, 16, 0x020048},
{"OR SC,~0", 0x01, 0x9D, 2, 1, 8, 0x020048},

// Exclusive OR
{"XOR A,A", 0x01, 0x38, 1, 0},
{"XOR A,B", 0x01, 0x39, 1, 0},
{"XOR A,~0", 0x01, 0x3A, 2, 1, 8, 0x020048},
{"XOR A,[HL]", 0x01, 0x3B, 1, 0},
{"XOR A,[BR:~0]", 0x01, 0x3C, 2, 1, 8, 0x040048},
{"XOR A,[~0]", 0x01, 0x3D, 3, 1, 8, 0x040050},
{"XOR A,[IX]", 0x01, 0x3E, 1, 0},
{"XOR A,[IY]", 0x01, 0x3F, 1, 0},
{"XOR A,[IX+~0]", 0x04, 0x38CE, 3, 1, 16, 0x040048},
{"XOR A,[IY+~0]", 0x04, 0x39CE, 3, 1, 16, 0x040048},
{"XOR A,[IX+L]", 0x04, 0x3ACE, 2, 0},
{"XOR A,[IY+L]", 0x04, 0x3BCE, 2, 0},
{"XOR B,~0", 0x04, 0xB8CE, 3, 1, 16, 0x020048},
{"XOR H,~0", 0x04, 0xBACE, 3, 1, 16, 0x020048},
{"XOR [BR:~0],~1", 0x01, 0xDA, 3, 2, 8, 0x020048, 16, 0x040048},
{"XOR [HL],[IX]", 0x04, 0x3ECE, 2, 0},
{"XOR [HL],[IY]", 0x04, 0x3FCE, 2, 0},
{"XOR [HL],A", 0x04, 0x3CCE, 2, 0},
{"XOR [HL],~0", 0x04, 0x3DCE, 3, 1, 16, 0x020048},
{"XOR L,~0", 0x04, 0xB9CE, 3, 1, 16, 0x020048},
{"XOR SC,~0", 0x01, 0x9E, 2, 1, 8, 0x020048},

// Comparison
{"CP A,A", 0x01, 0x30, 1, 0},
{"CP A,B", 0x01, 0x31, 1, 0},
{"CP A,~0", 0x01, 0x32, 2, 1, 8, 0x020048},
{"CP A,[HL]", 0x01, 0x33, 1, 0},
{"CP A,[BR:~0]", 0x01, 0x34, 2, 1, 8, 0x040048},
{"CP A,[~0]", 0x01, 0x35, 3, 1, 8, 0x040050},
{"CP A,[IX]", 0x01, 0x36, 1, 0},
{"CP A,[IX+~0]", 0x04, 0x30CE, 3, 1, 16, 0x040048},
{"CP A,[IX+L]", 0x04, 0x32CE, 2, 0},
{"CP A,[IY]", 0x01, 0x37, 1, 0},
{"CP A,[IY+~0]", 0x04, 0x31CE, 3, 1, 16, 0x040048},
{"CP A,[IY+L]", 0x04, 0x33CE, 2, 0},
{"CP B,~0", 0x04, 0xBCCE, 3, 1, 16, 0x020048},
{"CP H,~0", 0x04, 0xBECE, 3, 1, 16, 0x020048},
{"CP BR,~0", 0x04, 0xBFCE, 3, 1, 16, 0x020048},
{"CP [BR:~0],~1", 0x01, 0xDB, 3, 2, 8, 0x020048, 16, 0x040048},
{"CP [HL],A", 0x04, 0x34CE, 2, 0},
{"CP [HL],~0", 0x04, 0x35CE, 3, 1, 16, 0x020048},
{"CP [HL],[IX]", 0x04, 0x36CE, 2, 0},
{"CP [HL],[IY]", 0x04, 0x37CE, 2, 0},
{"CP L,~0", 0x04, 0xBDCE, 3, 1, 16, 0x020048},

// Bit test
{"BIT A,B", 0x01, 0x94, 1, 0},
{"BIT A,~0", 0x01, 0x96, 2, 1, 8, 0x020048},
{"BIT B,~0", 0x01, 0x97, 2, 1, 8, 0x020048},
{"BIT [HL],~0", 0x01, 0x95, 2, 1, 8, 0x020048},
{"BIT [BR:~0],~1", 0x01, 0xDC, 3, 2, 8, 0x020048, 16, 0x040048},

// Increment by 1
{"INC A", 0x01, 0x80, 1, 0},
{"INC B", 0x01, 0x81, 1, 0},
{"INC H", 0x01, 0x83, 1, 0},
{"INC [BR:~0]", 0x01, 0x85, 2, 1, 8, 0x040048},
{"INC [HL]", 0x01, 0x86, 1, 0},
{"INC L", 0x01, 0x82, 1, 0},
{"INC BR", 0x01, 0x84, 1, 0},

// Decrement by 1
{"DEC A", 0x01, 0x88, 1, 0},
{"DEC B", 0x01, 0x89, 1, 0},
{"DEC H", 0x01, 0x8B, 1, 0},
{"DEC [BR:~0]", 0x01, 0x8D, 2, 1, 8, 0x040048},
{"DEC [HL]", 0x01, 0x8E, 1, 0},
{"DEC L", 0x01, 0x8A, 1, 0},
{"DEC BR", 0x01, 0x8C, 1, 0},

// Multiplication
{"MLT", 0x04, 0xD8CE, 2, 0},

// Division
{"DIV", 0x04, 0xD9CE, 2, 0},

// Complement of 1
{"CPL A", 0x04, 0xA0CE, 2, 0},
{"CPL B", 0x04, 0xA1CE, 2, 0},
{"CPL [HL]", 0x04, 0xA3CE, 2, 0},
{"CPL [BR:~0]", 0x04, 0xA2CE, 3, 1, 16, 0x040048},

// Complement of 2
{"NEG A", 0x04, 0xA4CE, 2, 0},
{"NEG B", 0x04, 0xA5CE, 2, 0},
{"NEG [HL]", 0x04, 0xA7CE, 2, 0},
{"NEG [BR:~0]", 0x04, 0xA6CE, 3, 1, 16, 0x040048},

// 8-bit transfer
{"LD A,A", 0x01, 0x40, 1, 0},
{"LD A,B", 0x01, 0x41, 1, 0},
{"LD A,~0", 0x01, 0xB0, 2, 1, 8, 0x020048},
{"LD A,L", 0x01, 0x42, 1, 0},
{"LD A,H", 0x01, 0x43, 1, 0},
{"LD A,[BR:~0]", 0x01, 0x44, 2, 1, 8, 0x040048},
{"LD A,[HL]", 0x01, 0x45, 1, 0},
{"LD A,[IX]", 0x01, 0x46, 1, 0},
{"LD A,[IY]", 0x01, 0x47, 1, 0},
{"LD A,[IX+~0]", 0x04, 0x40CE, 3, 1, 16, 0x040048},
{"LD A,[IY+~0]", 0x04, 0x41CE, 3, 1, 16, 0x040048},
{"LD A,[IX+L]", 0x04, 0x42CE, 2, 0},
{"LD A,[IY+L]", 0x04, 0x43CE, 2, 0},
{"LD A,BR", 0x04, 0xC0CE, 2, 0},
{"LD A,SC", 0x04, 0xC1CE, 2, 0},
{"LD A,NB", 0x04, 0xC8CE, 2, 0},
{"LD A,EP", 0x04, 0xC9CE, 2, 0},
{"LD A,XP", 0x04, 0xCACE, 2, 0},
{"LD A,YP", 0x04, 0xCBCE, 2, 0},
{"LD A,[~0]", 0x04, 0xD0CE, 4, 1, 16, 0x040050},

{"LD B,A", 0x01, 0x48, 1, 0},
{"LD B,B", 0x01, 0x49, 1, 0},
{"LD B,L", 0x01, 0x4A, 1, 0},
{"LD B,H", 0x01, 0x4B, 1, 0},
{"LD B,[BR:~0]", 0x01, 0x4C, 2, 1, 8, 0x040048},
{"LD B,[HL]", 0x01, 0x4D, 1, 0},
{"LD B,[IX]", 0x01, 0x4E, 1, 0},
{"LD B,[IY]", 0x01, 0x4F, 1, 0},
{"LD B,~0", 0x01, 0xB1, 2, 1, 8, 0x020048},
{"LD B,[IX+~0]", 0x04, 0x48CE, 3, 1, 16, 0x040048},
{"LD B,[IY+~0]", 0x04, 0x49CE, 3, 1, 16, 0x040048},
{"LD B,[IX+L]", 0x04, 0x4ACE, 2, 0},
{"LD B,[IY+L]", 0x04, 0x4BCE, 2, 0},
{"LD B,[~0]", 0x04, 0xD1CE, 4, 1, 16, 0x040050},

{"LD L,A", 0x01, 0x50, 1, 0},
{"LD L,B", 0x01, 0x51, 1, 0},
{"LD L,L", 0x01, 0x52, 1, 0},
{"LD L,H", 0x01, 0x53, 1, 0},
{"LD L,[BR:~0]", 0x01, 0x54, 2, 1, 8, 0x040048},
{"LD L,[HL]", 0x01, 0x55, 1, 0},
{"LD L,[IX]", 0x01, 0x56, 1, 0},
{"LD L,[IY]", 0x01, 0x57, 1, 0},
{"LD L,~0", 0x01, 0xB2, 2, 1, 8, 0x020048},
{"LD L,[IX+~0]", 0x04, 0x50CE, 3, 1, 16, 0x040048},
{"LD L,[IY+~0]", 0x04, 0x51CE, 3, 1, 16, 0x040048},
{"LD L,[IX+L]", 0x04, 0x52CE, 2, 0},
{"LD L,[IY+L]", 0x04, 0x53CE, 2, 0},
{"LD L,[~0]", 0x04, 0xD2CE, 4, 1, 16, 0x040050},

{"LD H,A", 0x01, 0x58, 1, 0},
{"LD H,B", 0x01, 0x59, 1, 0},
{"LD H,L", 0x01, 0x5A, 1, 0},
{"LD H,H", 0x01, 0x5B, 1, 0},
{"LD H,[BR:~0]", 0x01, 0x5C, 2, 1, 8, 0x040048},
{"LD H,[HL]", 0x01, 0x5D, 1, 0},
{"LD H,[IX]", 0x01, 0x5E, 1, 0},
{"LD H,[IY]", 0x01, 0x5F, 1, 0},
{"LD H,[~0]", 0x04, 0xD3CE, 4, 1, 16, 0x040050},
{"LD H,[IX+~0]", 0x04, 0x58CE, 3, 1, 16, 0x040048},
{"LD H,[IY+~0]", 0x04, 0x59CE, 3, 1, 16, 0x040048},
{"LD H,[IX+L]", 0x04, 0x5ACE, 2, 0},
{"LD H,[IY+L]", 0x04, 0x5BCE, 2, 0},
{"LD H,~0", 0x01, 0xB3, 2, 1, 8, 0x020048},

{"LD BR,~0", 0x01, 0xB4, 2, 1, 8, 0x020048},
{"LD BR,A", 0x04, 0xC2CE, 2, 0},

{"LD SC,~0", 0x01, 0x9F, 2, 1, 8, 0x020048},
{"LD SC,A", 0x04, 0xC3CE, 2, 0},

{"LD NB,~0", 0x04, 0xC4CE, 3, 1, 16, 0x020048},
{"LD NB,A", 0x04, 0xCCCE, 2, 0},
{"LD EP,~0", 0x04, 0xC5CE, 3, 1, 16, 0x020048},
{"LD EP,A", 0x04, 0xCDCE, 2, 0},
{"LD XP,~0", 0x04, 0xC6CE, 3, 1, 16, 0x020048},
{"LD XP,A", 0x04, 0xCECE, 2, 0},
{"LD YP,~0", 0x04, 0xC7CE, 3, 1, 16, 0x020048},
{"LD YP,A", 0x04, 0xCFCE, 2, 0},

{"LD [BR:~0],A", 0x01, 0x78, 2, 1, 8, 0x040048},
{"LD [BR:~0],B", 0x01, 0x79, 2, 1, 8, 0x040048},
{"LD [BR:~0],L", 0x01, 0x7A, 2, 1, 8, 0x040048},
{"LD [BR:~0],H", 0x01, 0x7B, 2, 1, 8, 0x040048},
{"LD [BR:~0],[HL]", 0x01, 0x7D, 2, 1, 8, 0x040048},
{"LD [BR:~0],[IX]", 0x01, 0x7E, 2, 1, 8, 0x040048},
{"LD [BR:~0],[IY]", 0x01, 0x7F, 2, 1, 8, 0x040048},
{"LD [BR:~0],~1", 0x01, 0xDD, 3, 2, 8, 0x020048, 16, 0x040048},

{"LD [~0],A", 0x04, 0xD4CE, 4, 1, 16, 0x040050},
{"LD [~0],B", 0x04, 0xD5CE, 4, 1, 16, 0x040050},
{"LD [~0],L", 0x04, 0xD6CE, 4, 1, 16, 0x040050},
{"LD [~0],H", 0x04, 0xD7CE, 4, 1, 16, 0x040050},

{"LD [HL],A", 0x01, 0x68, 1, 0},
{"LD [HL],B", 0x01, 0x69, 1, 0},
{"LD [HL],L", 0x01, 0x6A, 1, 0},
{"LD [HL],H", 0x01, 0x6B, 1, 0},
{"LD [HL],[BR:~0]", 0x01, 0x6C, 2, 1, 8, 0x040048},
{"LD [HL],[HL]", 0x01, 0x6D, 1, 0},
{"LD [HL],[IX]", 0x01, 0x6E, 1, 0},
{"LD [HL],[IY]", 0x01, 0x6F, 1, 0},
{"LD [HL],~0", 0x01, 0xB5, 2, 1, 8, 0x020048},
{"LD [HL],[IX+~0]", 0x04, 0x60CE, 3, 1, 16, 0x040048},
{"LD [HL],[IY+~0]", 0x04, 0x61CE, 3, 1, 16, 0x040048},
{"LD [HL],[IX+L]", 0x04, 0x62CE, 2, 0},
{"LD [HL],[IY+L]", 0x04, 0x63CE, 2, 0},

{"LD [IX],A", 0x01, 0x60, 1, 0},
{"LD [IX],B", 0x01, 0x61, 1, 0},
{"LD [IX],L", 0x01, 0x62, 1, 0},
{"LD [IX],H", 0x01, 0x63, 1, 0},
{"LD [IX],[BR:~0]", 0x01, 0x64, 2, 1, 8, 0x040048},
{"LD [IX],[HL]", 0x01, 0x65, 1, 0},
{"LD [IX],[IX]", 0x01, 0x66, 1, 0},
{"LD [IX],[IY]", 0x01, 0x67, 1, 0},
{"LD [IX],~0", 0x01, 0xB6, 2, 1, 8, 0x020048},
{"LD [IX],[IX+~0]", 0x04, 0x68CE, 3, 1, 16, 0x040048},
{"LD [IX],[IY+~0]", 0x04, 0x69CE, 3, 1, 16, 0x040048},
{"LD [IX],[IX+L]", 0x04, 0x6ACE, 2, 0},
{"LD [IX],[IY+L]", 0x04, 0x6BCE, 2, 0},

{"LD [IY],A", 0x01, 0x70, 1, 0},
{"LD [IY],B", 0x01, 0x71, 1, 0},
{"LD [IY],L", 0x01, 0x72, 1, 0},
{"LD [IY],H", 0x01, 0x73, 1, 0},
{"LD [IY],[BR:~0]", 0x01, 0x74, 2, 1, 8, 0x040048},
{"LD [IY],[HL]", 0x01, 0x75, 1, 0},
{"LD [IY],[IX]", 0x01, 0x76, 1, 0},
{"LD [IY],[IY]", 0x01, 0x77, 1, 0},
{"LD [IY],~0", 0x01, 0xB7, 2, 1, 8, 0x020048},
{"LD [IY],[IX+~0]", 0x04, 0x78CE, 3, 1, 16, 0x040048},
{"LD [IY],[IY+~0]", 0x04, 0x79CE, 3, 1, 16, 0x040048},
{"LD [IY],[IX+L]", 0x04, 0x7ACE, 2, 0},
{"LD [IY],[IY+L]", 0x04, 0x7BCE, 2, 0},

{"LD [IX+~0],A", 0x04, 0x44CE, 3, 1, 16, 0x040048},
{"LD [IX+~0],B", 0x04, 0x4CCE, 3, 1, 16, 0x040048},
{"LD [IX+~0],L", 0x04, 0x54CE, 3, 1, 16, 0x040048},
{"LD [IX+~0],H", 0x04, 0x5CCE, 3, 1, 16, 0x040048},

{"LD [IY+~0],A", 0x04, 0x45CE, 3, 1, 16, 0x040048},
{"LD [IY+~0],B", 0x04, 0x4DCE, 3, 1, 16, 0x040048},
{"LD [IY+~0],L", 0x04, 0x55CE, 3, 1, 16, 0x040048},
{"LD [IY+~0],H", 0x04, 0x5DCE, 3, 1, 16, 0x040048},

{"LD [IX+L],A", 0x04, 0x46CE, 2, 0},
{"LD [IX+L],B", 0x04, 0x4ECE, 2, 0},
{"LD [IX+L],L", 0x04, 0x56CE, 2, 0},
{"LD [IX+L],H", 0x04, 0x5ECE, 2, 0},

{"LD [IY+L],A", 0x04, 0x47CE, 2, 0},
{"LD [IY+L],B", 0x04, 0x4FCE, 2, 0},
{"LD [IY+L],L", 0x04, 0x57CE, 2, 0},
{"LD [IY+L],H", 0x04, 0x5FCE, 2, 0},

// Byte exchange
{"EX A,B", 0x01, 0xCC, 1, 0},
{"EX A,[HL]", 0x01, 0xCD, 1, 0},

// Nibble exchange
{"SWAP A", 0x01, 0xF6, 1, 0},
{"SWAP [HL]", 0x01, 0xF7, 1, 0},

// Rotate to left with carry
{"RL A", 0x04, 0x90CE, 2, 0},
{"RL B", 0x04, 0x91CE, 2, 0},
{"RL [HL]", 0x04, 0x93CE, 2, 0},
{"RL [BR:~0]", 0x04, 0x92CE, 3, 1, 16, 0x040048},

// Rotate to left without carry
{"RLC A", 0x04, 0x94CE, 2, 0},
{"RLC B", 0x04, 0x95CE, 2, 0},
{"RLC [HL]", 0x04, 0x97CE, 2, 0},
{"RLC [BR:~0]", 0x04, 0x96CE, 3, 1, 16, 0x040048},

// Rotate to right with carry
{"RR A", 0x04, 0x98CE, 2, 0},
{"RR B", 0x04, 0x99CE, 2, 0},
{"RR [HL]", 0x04, 0x9BCE, 2, 0},
{"RR [BR:~0]", 0x04, 0x9ACE, 3, 1, 16, 0x040048},

// Rotate to right without carry
{"RRC A", 0x04, 0x9CCE, 2, 0},
{"RRC B", 0x04, 0x9DCE, 2, 0},
{"RRC [HL]", 0x04, 0x9FCE, 2, 0},
{"RRC [BR:~0]", 0x04, 0x9ECE, 3, 1, 16, 0x040048},

// Arithmetic shift to left
{"SLA A", 0x04, 0x80CE, 2, 0},
{"SLA B", 0x04, 0x81CE, 2, 0},
{"SLA [HL]", 0x04, 0x83CE, 2, 0},
{"SLA [BR:~0]", 0x04, 0x82CE, 3, 1, 16, 0x040048},

// Logical shift to left
{"SLL A", 0x04, 0x84CE, 2, 0},
{"SLL B", 0x04, 0x85CE, 2, 0},
{"SLL [HL]", 0x04, 0x87CE, 2, 0},
{"SLL [BR:~0]", 0x04, 0x86CE, 3, 1, 16, 0x040048},

// Arithmetic shift to right
{"SRA A", 0x04, 0x88CE, 2, 0},
{"SRA B", 0x04, 0x89CE, 2, 0},
{"SRA [HL]", 0x04, 0x8BCE, 2, 0},
{"SRA [BR:~0]", 0x04, 0x8ACE, 3, 1, 16, 0x040048},

// Logical shift to right
{"SRL A", 0x04, 0x8CCE, 2, 0},
{"SRL B", 0x04, 0x8DCE, 2, 0},
{"SRL [HL]", 0x04, 0x8FCE, 2, 0},
{"SRL [BR:~0]", 0x04, 0x8ECE, 3, 1, 16, 0x040048},

// Pack / unpack / code extension
{"PACK", 0x01, 0xDE, 1, 0},
{"UPCK", 0x01, 0xDF, 1, 0},
{"SEP", 0x04, 0xA8CE, 2, 0},

//// 16-bit instructions
// Addition
{"ADD BA,~0", 0x01, 0xC0, 3, 1, 8, 0x020050},
{"ADD BA,BA", 0x04, 0x00CF, 2, 0},
{"ADD BA,HL", 0x04, 0x01CF, 2, 0},
{"ADD BA,IX", 0x04, 0x02CF, 2, 0},
{"ADD BA,IY", 0x04, 0x03CF, 2, 0},
{"ADD HL,~0", 0x01, 0xC1, 3, 1, 8, 0x020050},
{"ADD HL,BA", 0x04, 0x20CF, 2, 0},
{"ADD HL,HL", 0x04, 0x21CF, 2, 0},
{"ADD HL,IX", 0x04, 0x22CF, 2, 0},
{"ADD HL,IY", 0x04, 0x23CF, 2, 0},
{"ADD IX,~0", 0x01, 0xC2, 3, 1, 8, 0x020050},
{"ADD IX,BA", 0x04, 0x40CF, 2, 0},
{"ADD IX,HL", 0x04, 0x41CF, 2, 0},
{"ADD IY,~0", 0x01, 0xC3, 3, 1, 8, 0x020050},
{"ADD IY,BA", 0x04, 0x42CF, 2, 0},
{"ADD IY,HL", 0x04, 0x43CF, 2, 0},
{"ADD SP,BA", 0x04, 0x44CF, 2, 0},
{"ADD SP,HL", 0x04, 0x45CF, 2, 0},
{"ADD SP,~0", 0x04, 0x68CF, 4, 1, 16, 0x020050},

{"ADC BA,BA", 0x04, 0x04CF, 2, 0},
{"ADC BA,HL", 0x04, 0x05CF, 2, 0},
{"ADC BA,IX", 0x04, 0x06CF, 2, 0},
{"ADC BA,IY", 0x04, 0x07CF, 2, 0},
{"ADC BA,~0", 0x04, 0x60CF, 4, 1, 16, 0x020050},
{"ADC HL,BA", 0x04, 0x24CF, 2, 0},
{"ADC HL,HL", 0x04, 0x25CF, 2, 0},
{"ADC HL,IX", 0x04, 0x26CF, 2, 0},
{"ADC HL,IY", 0x04, 0x27CF, 2, 0},
{"ADC HL,~0", 0x04, 0x61CF, 4, 1, 16, 0x020050},

// Subtraction
{"SUB BA,BA", 0x04, 0x08CF, 2, 0},
{"SUB BA,HL", 0x04, 0x09CF, 2, 0},
{"SUB BA,IX", 0x04, 0x0ACF, 2, 0},
{"SUB BA,IY", 0x04, 0x0BCF, 2, 0},
{"SUB BA,~0", 0x01, 0xD0, 3, 1, 8, 0x020050},
{"SUB HL,BA", 0x04, 0x28CF, 2, 0},
{"SUB HL,HL", 0x04, 0x29CF, 2, 0},
{"SUB HL,IX", 0x04, 0x2ACF, 2, 0},
{"SUB HL,IY", 0x04, 0x2BCF, 2, 0},
{"SUB HL,~0", 0x01, 0xD1, 3, 1, 8, 0x020050},
{"SUB IX,BA", 0x04, 0x48CF, 2, 0},
{"SUB IX,HL", 0x04, 0x49CF, 2, 0},
{"SUB IX,~0", 0x01, 0xD2, 3, 1, 8, 0x020050},
{"SUB IY,BA", 0x04, 0x4ACF, 2, 0},
{"SUB IY,HL", 0x04, 0x4BCF, 2, 0},
{"SUB IY,~0", 0x01, 0xD3, 3, 1, 8, 0x020050},
{"SUB SP,BA", 0x04, 0x4CCF, 2, 0},
{"SUB SP,HL", 0x04, 0x4DCF, 2, 0},
{"SUB SP,~0", 0x04, 0x6ACF, 4, 1, 16, 0x020050},

{"SBC BA,BA", 0x04, 0x0CCF, 2, 0},
{"SBC BA,HL", 0x04, 0x0DCF, 2, 0},
{"SBC BA,IX", 0x04, 0x0ECF, 2, 0},
{"SBC BA,IY", 0x04, 0x0FCF, 2, 0},
{"SBC BA,~0", 0x04, 0x62CF, 4, 1, 16, 0x020050},
{"SBC HL,BA", 0x04, 0x2CCF, 2, 0},
{"SBC HL,HL", 0x04, 0x2DCF, 2, 0},
{"SBC HL,IX", 0x04, 0x2ECF, 2, 0},
{"SBC HL,IY", 0x04, 0x2FCF, 2, 0},
{"SBC HL,~0", 0x04, 0x63CF, 4, 1, 16, 0x020050},

// Comparison
{"CP BA,~0", 0x01, 0xD4, 3, 1, 8, 0x020050},
{"CP BA,BA", 0x04, 0x18CF, 2, 0},
{"CP BA,HL", 0x04, 0x19CF, 2, 0},
{"CP BA,IX", 0x04, 0x1ACF, 2, 0},
{"CP BA,IY", 0x04, 0x1BCF, 2, 0},
{"CP HL,~0", 0x01, 0xD5, 3, 1, 8, 0x020050},
{"CP HL,BA", 0x04, 0x38CF, 2, 0},
{"CP HL,HL", 0x04, 0x39CF, 2, 0},
{"CP HL,IX", 0x04, 0x3ACF, 2, 0},
{"CP HL,IY", 0x04, 0x3BCF, 2, 0},
{"CP IX,~0", 0x01, 0xD6, 3, 1, 8, 0x020050},
{"CP IY,~0", 0x01, 0xD7, 3, 1, 8, 0x020050},
{"CP SP,BA", 0x04, 0x5CCF, 2, 0},
{"CP SP,HL", 0x04, 0x5DCF, 2, 0},
{"CP SP,~0", 0x04, 0x6CCF, 4, 1, 16, 0x020050},

// Increment by 1
{"INC SP", 0x01, 0x87, 1, 0},
{"INC BA", 0x01, 0x90, 1, 0},
{"INC HL", 0x01, 0x91, 1, 0},
{"INC IX", 0x01, 0x92, 1, 0},
{"INC IY", 0x01, 0x93, 1, 0},

// Decrement by 1
{"DEC BA", 0x01, 0x98, 1, 0},
{"DEC SP", 0x01, 0x8F, 1, 0},
{"DEC HL", 0x01, 0x99, 1, 0},
{"DEC IX", 0x01, 0x9A, 1, 0},
{"DEC IY", 0x01, 0x9B, 1, 0},

// 16-bit transfer
{"LD BA,[~0]", 0x01, 0xB8, 3, 1, 8, 0x040050},
{"LD BA,~0", 0x01, 0xC4, 3, 1, 8, 0x020050},
{"LD BA,[SP+~0]", 0x04, 0x70CF, 3, 1, 16, 0x040048},
{"LD BA,[HL]", 0x04, 0xC0CF, 2, 0},
{"LD BA,[IX]", 0x04, 0xD0CF, 2, 0},
{"LD BA,[IY]", 0x04, 0xD8CF, 2, 0},
{"LD BA,BA", 0x04, 0xE0CF, 2, 0},
{"LD BA,HL", 0x04, 0xE1CF, 2, 0},
{"LD BA,IX", 0x04, 0xE2CF, 2, 0},
{"LD BA,IY", 0x04, 0xE3CF, 2, 0},
{"LD BA,SP", 0x04, 0xF8CF, 2, 0},
{"LD BA,PC", 0x04, 0xF9CF, 2, 0},

{"LD HL,[~0]", 0x01, 0xB9, 3, 1, 8, 0x040050},
{"LD HL,~0", 0x01, 0xC5, 3, 1, 8, 0x020050},
{"LD HL,[SP+~0]", 0x04, 0x71CF, 3, 1, 16, 0x040048},
{"LD HL,[HL]", 0x04, 0xC1CF, 2, 0},
{"LD HL,[IX]", 0x04, 0xD1CF, 2, 0},
{"LD HL,[IY]", 0x04, 0xD9CF, 2, 0},
{"LD HL,BA", 0x04, 0xE4CF, 2, 0},
{"LD HL,HL", 0x04, 0xE5CF, 2, 0},
{"LD HL,IX", 0x04, 0xE6CF, 2, 0},
{"LD HL,IY", 0x04, 0xE7CF, 2, 0},
{"LD HL,SP", 0x04, 0xF4CF, 2, 0},
{"LD HL,PC", 0x04, 0xF5CF, 2, 0},

{"LD IX,[~0]", 0x01, 0xBA, 3, 1, 8, 0x040050},
{"LD IX,~0", 0x01, 0xC6, 3, 1, 8, 0x020050},
{"LD IX,[SP+~0]", 0x04, 0x72CF, 3, 1, 16, 0x040048},
{"LD IX,[HL]", 0x04, 0xC2CF, 2, 0},
{"LD IX,[IX]", 0x04, 0xD2CF, 2, 0},
{"LD IX,[IY]", 0x04, 0xDACF, 2, 0},
{"LD IX,BA", 0x04, 0xE8CF, 2, 0},
{"LD IX,HL", 0x04, 0xE9CF, 2, 0},
{"LD IX,IX", 0x04, 0xEACF, 2, 0},
{"LD IX,IY", 0x04, 0xEBCF, 2, 0},
{"LD IX,SP", 0x04, 0xFACF, 2, 0},

{"LD IY,[~0]", 0x01, 0xBB, 3, 1, 8, 0x040050},
{"LD IY,~0", 0x01, 0xC7, 3, 1, 8, 0x020050},
{"LD IY,[SP+~0]", 0x04, 0x73CF, 3, 1, 16, 0x040048},
{"LD IY,[HL]", 0x04, 0xC3CF, 2, 0},
{"LD IY,[IX]", 0x04, 0xD3CF, 2, 0},
{"LD IY,[IY]", 0x04, 0xDBCF, 2, 0},
{"LD IY,BA", 0x04, 0xECCF, 2, 0},
{"LD IY,HL", 0x04, 0xEDCF, 2, 0},
{"LD IY,IX", 0x04, 0xEECF, 2, 0},
{"LD IY,IY", 0x04, 0xEFCF, 2, 0},
{"LD IY,SP", 0x04, 0xFECF, 2, 0},

{"LD SP,~0", 0x04, 0x6ECF, 4, 1, 16, 0x020050},
{"LD SP,[~0]", 0x04, 0x78CF, 4, 1, 16, 0x040050},
{"LD SP,BA", 0x04, 0xF0CF, 2, 0},
{"LD SP,HL", 0x04, 0xF1CF, 2, 0},
{"LD SP,IX", 0x04, 0xF2CF, 2, 0},
{"LD SP,IY", 0x04, 0xF3CF, 2, 0},

{"LD [~0],BA", 0x01, 0xBC, 3, 1, 8, 0x040050},
{"LD [~0],HL", 0x01, 0xBD, 3, 1, 8, 0x040050},
{"LD [~0],IX", 0x01, 0xBE, 3, 1, 8, 0x040050},
{"LD [~0],IY", 0x01, 0xBF, 3, 1, 8, 0x040050},
{"LD [~0],SP", 0x04, 0x7CCF, 4, 1, 16, 0x040050},

{"LD [HL],BA", 0x04, 0xC4CF, 2, 0},
{"LD [HL],HL", 0x04, 0xC5CF, 2, 0},
{"LD [HL],IX", 0x04, 0xC6CF, 2, 0},
{"LD [HL],IY", 0x04, 0xC7CF, 2, 0},

{"LD [IX],BA", 0x04, 0xD4CF, 2, 0},
{"LD [IX],HL", 0x04, 0xD5CF, 2, 0},
{"LD [IX],IX", 0x04, 0xD6CF, 2, 0},
{"LD [IX],IY", 0x04, 0xD7CF, 2, 0},

{"LD [IY],BA", 0x04, 0xDCCF, 2, 0},
{"LD [IY],HL", 0x04, 0xDDCF, 2, 0},
{"LD [IY],IX", 0x04, 0xDECF, 2, 0},
{"LD [IY],IY", 0x04, 0xDFCF, 2, 0},

{"LD [SP+~0],BA", 0x04, 0x74CF, 3, 1, 16, 0x040048},
{"LD [SP+~0],HL", 0x04, 0x75CF, 3, 1, 16, 0x040048},
{"LD [SP+~0],IX", 0x04, 0x76CF, 3, 1, 16, 0x040048},
{"LD [SP+~0],IY", 0x04, 0x77CF, 3, 1, 16, 0x040048},

// Byte exchange
{"EX BA,HL", 0x01, 0xC8, 1, 0},
{"EX BA,IX", 0x01, 0xC9, 1, 0},
{"EX BA,IY", 0x01, 0xCA, 1, 0},
{"EX BA,SP", 0x01, 0xCB, 1, 0},

//// Stack control
{"PUSH BA", 0x01, 0xA0, 1, 0},
{"PUSH HL", 0x01, 0xA1, 1, 0},
{"PUSH IX", 0x01, 0xA2, 1, 0},
{"PUSH IY", 0x01, 0xA3, 1, 0},
{"PUSH BR", 0x01, 0xA4, 1, 0},
{"PUSH EP", 0x01, 0xA5, 1, 0},
{"PUSH IP", 0x01, 0xA6, 1, 0},
{"PUSH SC", 0x01, 0xA7, 1, 0},
{"PUSH A", 0x04, 0xB0CF, 2, 0},
{"PUSH B", 0x04, 0xB1CF, 2, 0},
{"PUSH L", 0x04, 0xB2CF, 2, 0},
{"PUSH H", 0x04, 0xB3CF, 2, 0},
{"PUSH ALL", 0x04, 0xB8CF, 2, 0},
{"PUSH ALE", 0x04, 0xB9CF, 2, 0},

{"POP BA", 0x01, 0xA8, 1, 0},
{"POP HL", 0x01, 0xA9, 1, 0},
{"POP IX", 0x01, 0xAA, 1, 0},
{"POP IY", 0x01, 0xAB, 1, 0},
{"POP BR", 0x01, 0xAC, 1, 0},
{"POP EP", 0x01, 0xAD, 1, 0},
{"POP IP", 0x01, 0xAE, 1, 0},
{"POP SC", 0x01, 0xAF, 1, 0},
{"POP A", 0x04, 0xB4CF, 2, 0},
{"POP B", 0x04, 0xB5CF, 2, 0},
{"POP L", 0x04, 0xB6CF, 2, 0},
{"POP H", 0x04, 0xB7CF, 2, 0},
{"POP ALL", 0x04, 0xBCCF, 2, 0},
{"POP ALE", 0x04, 0xBDCF, 2, 0},

//// Branching
// Relative short jump
{"JRS C,~0", 0x03, 0xE4, 2, 1, 8, 0x000188},
{"JRS NC,~0", 0x03, 0xE5, 2, 1, 8, 0x000188},
{"JRS Z,~0", 0x03, 0xE6, 2, 1, 8, 0x000188},
{"JRS NZ,~0", 0x03, 0xE7, 2, 1, 8, 0x000188},
{"JRS ~0", 0x03, 0xF1, 2, 1, 8, 0x000188},

{"JRS LT,~0", 0x06, 0xE0CE, 3, 1, 16, 0x000188},
{"JRS LE,~0", 0x06, 0xE1CE, 3, 1, 16, 0x000188},
{"JRS GT,~0", 0x06, 0xE2CE, 3, 1, 16, 0x000188},
{"JRS GE,~0", 0x06, 0xE3CE, 3, 1, 16, 0x000188},
{"JRS V,~0", 0x06, 0xE4CE, 3, 1, 16, 0x000188},
{"JRS NV,~0", 0x06, 0xE5CE, 3, 1, 16, 0x000188},
{"JRS P,~0", 0x06, 0xE6CE, 3, 1, 16, 0x000188},
{"JRS M,~0", 0x06, 0xE7CE, 3, 1, 16, 0x000188},
{"JRS F0,~0", 0x06, 0xE8CE, 3, 1, 16, 0x000188},
{"JRS F1,~0", 0x06, 0xE9CE, 3, 1, 16, 0x000188},
{"JRS F2,~0", 0x06, 0xEACE, 3, 1, 16, 0x000188},
{"JRS F3,~0", 0x06, 0xEBCE, 3, 1, 16, 0x000188},
{"JRS NF0,~0", 0x06, 0xECCE, 3, 1, 16, 0x000188},
{"JRS NF1,~0", 0x06, 0xEDCE, 3, 1, 16, 0x000188},
{"JRS NF2,~0", 0x06, 0xEECE, 3, 1, 16, 0x000188},
{"JRS NF3,~0", 0x06, 0xEFCE, 3, 1, 16, 0x000188},

// Relative long jump
{"JRL C,~0", 0x03, 0xEC, 3, 1, 8, 0x000190},
{"JRL NC,~0", 0x03, 0xED, 3, 1, 8, 0x000190},
{"JRL Z,~0", 0x03, 0xEE, 3, 1, 8, 0x000190},
{"JRL NZ,~0", 0x03, 0xEF, 3, 1, 8, 0x000190},
{"JRL ~0", 0x03, 0xF3, 3, 1, 8, 0x000190},

// Indirect jump
{"JP HL", 0x01, 0xF4, 1, 0},
{"JP [~0]", 0x01, 0xFD, 2, 1, 9, 0x080047},

// Loop
{"DJR NZ,~0", 0x03, 0xF5, 2, 1, 8, 0x000188},

// Relative short call
{"CARS C,~0", 0x03, 0xE0, 2, 1, 8, 0x000188},
{"CARS NC,~0", 0x03, 0xE1, 2, 1, 8, 0x000188},
{"CARS Z,~0", 0x03, 0xE2, 2, 1, 8, 0x000188},
{"CARS NZ,~0", 0x03, 0xE3, 2, 1, 8, 0x000188},
{"CARS ~0", 0x03, 0xF0, 2, 1, 8, 0x000188},
{"CARS LT,~0", 0x06, 0xF0CE, 3, 1, 16, 0x000188},
{"CARS LE,~0", 0x06, 0xF1CE, 3, 1, 16, 0x000188},
{"CARS GT,~0", 0x06, 0xF2CE, 3, 1, 16, 0x000188},
{"CARS GE,~0", 0x06, 0xF3CE, 3, 1, 16, 0x000188},
{"CARS V,~0", 0x06, 0xF4CE, 3, 1, 16, 0x000188},
{"CARS NV,~0", 0x06, 0xF5CE, 3, 1, 16, 0x000188},
{"CARS P,~0", 0x06, 0xF6CE, 3, 1, 16, 0x000188},
{"CARS M,~0", 0x06, 0xF7CE, 3, 1, 16, 0x000188},
{"CARS F0,~0", 0x06, 0xF8CE, 3, 1, 16, 0x000188},
{"CARS F1,~0", 0x06, 0xF9CE, 3, 1, 16, 0x000188},
{"CARS F2,~0", 0x06, 0xFACE, 3, 1, 16, 0x000188},
{"CARS F3,~0", 0x06, 0xFBCE, 3, 1, 16, 0x000188},
{"CARS NF0,~0", 0x06, 0xFCCE, 3, 1, 16, 0x000188},
{"CARS NF1,~0", 0x06, 0xFDCE, 3, 1, 16, 0x000188},
{"CARS NF2,~0", 0x06, 0xFECE, 3, 1, 16, 0x000188},
{"CARS NF3,~0", 0x06, 0xFFCE, 3, 1, 16, 0x000188},

// Relative long call
{"CARL C,~0", 0x03, 0xE8, 3, 1, 8, 0x000190},
{"CARL NC,~0", 0x03, 0xE9, 3, 1, 8, 0x000190},
{"CARL Z,~0", 0x03, 0xEA, 3, 1, 8, 0x000190},
{"CARL NZ,~0", 0x03, 0xEB, 3, 1, 8, 0x000190},
{"CARL ~0", 0x03, 0xF2, 3, 1, 8, 0x000190},

// Indirect call
{"CARL [~0]", 0x01, 0xFB, 3, 1, 8, 0x040050},

// Return / exception processing return / return and skip 
{"RET", 0x01, 0xF8, 1, 0},
{"RETE", 0x01, 0xF9, 1, 0},
{"RETS", 0x01, 0xFA, 1, 0},

// Software interrupt
{"INT [~0]", 0x01, 0xFC, 2, 1, 9, 0x080047},

//// System Control
{"NOP", 0x01, 0xFF, 1, 0},
{"HALT", 0x04, 0xAECE, 2, 0},
{"SLP", 0x04, 0xAFCE, 2, 0},
};
